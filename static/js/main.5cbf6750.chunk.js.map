{"version":3,"sources":["Header.js","views/ListView.js","views/GridView.js","views/ChartView.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","onClick","toggleView","paper","padding","margin","maxWidth","image","width","height","img","display","maxHeight","ListView","data","map","value","Paper","mt","Grid","container","item","ButtonBase","alt","src","xs","sm","direction","gutterBottom","body","slice","palette","text","secondary","GridView","md","lg","ChartView","heading","Object","keys","adata","values","chartType","loader","options","chart","subtitle","rootProps","App","type","setState","viewType","state","fetch","then","response","json","console","log","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cbf6750.chunk.js","sourcesContent":["import React from \"react\"\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ListIcon from '@material-ui/icons/List';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\nconst Header = (props) => {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Toggle Layout\n            </Typography>\n            <IconButton color=\"inherit\" onClick={()=>props.toggleView(\"list\")}>\n              <ListIcon />\n            </IconButton>\n            <IconButton color=\"inherit\" onClick={()=>props.toggleView(\"grid\")}>\n              <AppsIcon />\n            </IconButton>\n            <IconButton color=\"inherit\" onClick={()=>props.toggleView(\"chart\")}>\n              <BarChartIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n    )\n}\nexport default Header","import React from \"react\"\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: '10px auto',\n      maxWidth: 500,\n    },\n    image: {\n      width: 128,\n      height: 128,\n    },\n    img: {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%',\n    },\n  }),\n);\n\nconst ListView = (props)=>{\n    const classes = useStyles();\n    const { data } = props\n    return (\n        <div className={classes.root}>\n            {   data.map((value)=>\n                <Paper className={classes.paper} mt= {1}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <ButtonBase className={classes.image}>\n                        <img className={classes.img} alt=\"complex\" src=\"logo512.png\" />\n                        </ButtonBase>\n                    </Grid>\n                    <Grid item xs={12} sm container>\n                        <Grid item xs container direction=\"column\" spacing={2}>\n                        <Grid item xs>\n                            <Typography gutterBottom variant=\"subtitle2\">\n                                {value.title}\n                            </Typography>\n                            <Typography variant=\"body2\" gutterBottom>\n                                {value.body}\n                            </Typography>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                </Paper>).slice(0,5)\n            }\n        </div>\n\n    )\n}\nexport default ListView","import React from \"react\"\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            margin: '10px auto',\n            color: theme.palette.text.secondary,\n            height: \"inherit\",\n        }\n    }),\n);\nconst GridView = (props)=>{\n    const classes = useStyles();\n    const { data } = props\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n            {\n                data.map((value)=>\n                <Grid item xs={12} sm={6} md={4} lg={4}>\n                    <Paper className={classes.paper}>\n                            <h2>\n                                {value.title}\n                            </h2>\n                            <p>\n                                {value.body}\n                            </p>\n                    </Paper>\n                </Grid>\n                ).slice(0,15)\n            }\n            </Grid>\n            </Paper>\n        </div>\n    )\n}\nexport default GridView","import React from \"react\"\nimport { Chart } from \"react-google-charts\"\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        paper: {\n            padding: theme.spacing(2),\n            margin: '10px auto',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\nconst ChartView = (props)=>{\n    const classes = useStyles();\n    const { data } = props\n    const heading = Object.keys(data[0])\n    let adata = data.map((item)=> Object.values(item)).slice(0,5)\n    // console.log(data)\n    return (\n        <Paper className={classes.paper}>\n            <Chart\n                width={'100%'}\n                height={'90vh'}\n                chartType=\"Bar\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                    [...heading],\n                    ...adata\n                ]}\n                options={{\n                    // Material design options\n                    chart: {\n                    title: 'Posts',\n                    subtitle: 'Posts Representation',\n                    },\n                }}\n                // For tests\n                rootProps={{ 'data-testid': '2' }}\n            />\n        </Paper>\n    )\n}\nexport default ChartView","import React from \"react\"\nimport Header from \"./Header.js\"\n\nimport ListView from \"./views/ListView\"\nimport GridView from \"./views/GridView\"\nimport ChartView from \"./views/ChartView\"\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      data: [],\n      viewType: \"list\"\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/posts/')\n    .then(response => response.json())\n    .then(json => \n      this.setState({data: json}, ()=>{\n        console.log(this.state.data)\n      })\n    )\n  }\n  toggleView = (type) => {\n    this.setState({ viewType: type })\n  }\n\n  render(){\n    return (\n      <div>\n        <Header toggleView={ this.toggleView } />\n        {\n          this.state.viewType == \"list\"\n          ? <ListView data={this.state.data} /> \n          : this.state.viewType == \"grid\" \n          ? <GridView data={this.state.data} /> \n          : <ChartView data={this.state.data} /> \n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}